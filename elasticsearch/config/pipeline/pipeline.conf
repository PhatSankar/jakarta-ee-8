input {
    # jdbc{
    #     jdbc_connection_string => "jdbc:postgresql://192.168.73.111:5432/employee"
    #     jdbc_user => "admin"
    #     jdbc_password => "admin"
    #     jdbc_driver_class => "org.postgresql.Driver"
    #     jdbc_paging_enabled => true
    #     jdbc_validate_connection => true
    #     use_column_value => true
    #     tracking_column => "updated_at"
    #     tracking_column_type => "timestamp"
    #     schedule => "*/5 * * * * *"
    #     statement => "SELECT *, updated_at FROM public.employee WHERE updated_at > :sql_last_value AND updated_at::timestamp without time zone AT TIME ZONE 'WAST' < now()::timestamp ORDER BY updated_at ASC"
    #     type => "employee"
    # }
    jdbc{
        jdbc_connection_string => "jdbc:postgresql://host.docker.internal:5432/employee?useTimezone=true&useLegacyDatetimeCode=false&serverTimezone=UTC"
        jdbc_user => "sankar"
        jdbc_password => "sankar"
        jdbc_driver_class => "org.postgresql.Driver"
        jdbc_paging_enabled => true
        jdbc_validate_connection => true
        use_column_value => true
        tracking_column => "updated_at"
        tracking_column_type => "timestamp"
        schedule => "*/5 * * * * *"
        jdbc_default_timezone => "Asia/Ho_Chi_Minh"
        statement => "SELECT *, now() as time_sta FROM public.department WHERE updated_at > :sql_last_value::timestamptz AND updated_at < now() ORDER BY updated_at ASC"
        type => "department"
    }
}

filter {
    mutate {
        copy => {"id" => "[@metadata][_id]"}
        remove_field => ["@version", "@timestamp"]
    }
}

output {
    stdout {codec => rubydebug}
    elasticsearch{
        hosts => ["http://host.docker.internal:9200"]
        index => "%{type}"
        document_id => "employee_%{id}"
    }
}